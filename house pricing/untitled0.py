# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1c__HZjgJAW-hJMIPfzjvDsO0tecR0gkG
"""

import numpy as np
 import pandas as pd
 from sklearn.datasets import fetch_california_housing
 from sklearn.model_selection import train_test_split
 from sklearn.linear_model import LinearRegression
 from sklearn.metrics import mean_squared_error, r2_score
 import matplotlib.pyplot as plt
 # Load Dataset
 house_data = fetch_california_housing()
 x = pd.DataFrame(house_data.data, columns=house_data.feature_names)
 y = pd.Series(house_data.target)
 # Display Dataset Description
 print(house_data.DESCR)
 # Splitting the Dataset
 X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)
 1
# Initialize and Train the Model
 model = LinearRegression().fit(X_train, y_train)
 # Make Predictions
 y_pred = model.predict(X_test)
 # Model Evaluation
 mse = mean_squared_error(y_test, y_pred)
 r2 = r2_score(y_test, y_pred)
 # Output Model Coefficients and Metrics
 print("Model Coefficients:", model.coef_)
 print("Model Intercept:", model.intercept_)
 print("Mean Squared Error:", mse)
 print("R-squared:", r2)
 # Display Actual vs Predicted Values
 comparison = pd.DataFrame({'Actual Price': y_test, 'Predicted Price': y_pred})
 print(comparison.head())
 # Visualization
 plt.figure(figsize=(10, 6))
 plt.scatter(y_test, y_pred, color='blue', edgecolor='k', alpha=0.7)
 plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)],
 color='red', linestyle='--', linewidth=2)
 plt.title('Actual vs Predicted House Prices')
 plt.xlabel('Actual Price')
 plt.ylabel('Predicted Price')
 plt.grid(True)
 plt.show()